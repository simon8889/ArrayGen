{"version":3,"sources":["components/SnackBar/useSnackBar.ts","images/corchetes.png","components/Home/ArrayOutput/ArrayOutput.tsx","components/SnackBar/SnackBar.tsx","components/Home/Home.tsx","api.ts","components/Info/Info.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useSnackBar","useState","isActive","setIsActive","message","setMessage","useEffect","setTimeout","openSnackBar","ArrayOutput","data","isParse","setIsParse","className","onClick","join","map","element","index","SnackBar","Home","arrayResponse","setArrayResponse","length","min","max","sorted","duplicates","formContent","setFormContent","handleSubmit","e","preventDefault","obj","axios","post","process","then","error","array","catch","err","onSubmit","htmlFor","type","value","onChange","Number","target","required","name","tempInput","document","createElement","String","body","appendChild","select","execCommand","removeChild","to","src","ArrayGenLogo","alt","Info","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mWAoBeA,EAlBK,WAAO,IAAD,EACSC,oBAAkB,GAD3B,mBACjBC,EADiB,KACPC,EADO,OAEMF,mBAAiB,IAFvB,mBAEjBG,EAFiB,KAERC,EAFQ,KAezB,OANAC,qBAAU,WACLJ,GACHK,YAAW,kBAAMJ,GAAY,KAAQ,OAEpC,CAACD,IAEG,CAAEA,WAAUE,UAASI,aAXP,SAACJ,GACrBC,EAAWD,GACXD,GAAY,MCRC,MAA0B,sC,eCuB1BM,EAfK,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAA6B,EACrBT,oBAAS,GADY,mBAC5CU,EAD4C,KACnCC,EADmC,KAEnD,OACC,sBAAKC,UAAU,SAAf,UACC,qBAAKA,UAAU,0BAAf,SACC,sBAAKA,UAAU,iBAAiBC,QAAS,kBAAMF,GAAYD,IAA3D,UACC,4BAAIA,EAAU,MAAQ,UACtB,qBAAKE,UAAY,oBAAsBF,EAAU,4BAA8B,WAGjF,mBAAGE,UAAU,kBAAb,SAAgCF,EAAU,KAAOD,EAAKK,KAAK,MAAQ,KAAOL,EAAKM,KAAI,SAACC,EAASC,GAAV,OAAoB,sBAAML,UAAU,uBAAhB,SAAoDI,GAARC,YCFvIC,G,MARE,SAAC,GAAwC,IAAvCjB,EAAsC,EAAtCA,SAAUE,EAA4B,EAA5BA,QAC5B,OACC,qBAAKS,UAAWX,EAAW,CAAC,WAAY,UAAUa,KAAK,KAAO,CAAC,WAAY,WAAWA,KAAK,KAA3F,SACEX,MCwFWgB,EAvFF,WAAO,IAAD,EAC0BpB,IAApCI,EADU,EACVA,QAASF,EADC,EACDA,SAAUM,EADT,EACSA,aADT,EAE0BP,mBAAmB,IAF7C,mBAEVoB,EAFU,KAEKC,EAFL,OAGwBrB,mBAA4B,CACrEsB,OAAQ,GACRC,IAAK,EACLC,IAAK,IACLC,QAAQ,EACRC,YAAY,IARK,mBAGVC,EAHU,KAGIC,EAHJ,KAWZC,EAAe,SAACC,GAErB,GADAA,EAAEC,mBACM,EAAIJ,EAAYL,QAAYK,EAAYL,QAAU,KAAS,OAAOf,EAAa,uDCpBjE,IAACyB,KDqBVL,ECrBqCM,IAAMC,KAAN,UAFxCC,wCAEwC,QAAyBH,IDsBzEI,MAAK,SAAA3B,GAAI,OAAKA,EAAKA,KAAK4B,MAA4C9B,EAAa,yBAAjDc,EAAiBZ,EAAKA,KAAK6B,UAC3DC,OAAM,SAAAC,GAAG,OAAIjC,EAAa,6BAc7B,OACC,sBAAKK,UAAU,OAAf,UACC,sBAAKA,UAAU,kBAAf,UACC,sBAAKA,UAAU,qBAAf,UACC,+CACA,uBAAM6B,SAAU,SAAAX,GAAC,OAAID,EAAaC,IAAIlB,UAAU,aAAhD,UACC,sBAAKA,UAAU,cAAf,UACC,uBAAO8B,QAAQ,SAAf,2BACA,uBAAOC,KAAK,SAASC,MAAOjB,EAAYL,OAAQuB,SAAU,SAACf,GAAD,OAAkBF,EAAe,2BAAID,GAAL,IAAkBL,OAAQwB,OAAOhB,EAAEiB,OAAOH,WAAUI,UAAQ,EAACC,KAAK,cAE7J,sBAAKrC,UAAU,cAAf,UACC,uBAAO8B,QAAQ,MAAf,wBACA,uBAAOC,KAAK,SAASC,MAAOjB,EAAYJ,IAAKsB,SAAU,SAACf,GAAD,OAAkBF,EAAe,2BAAID,GAAL,IAAkBJ,IAAKuB,OAAOhB,EAAEiB,OAAOH,WAAUI,UAAQ,EAACC,KAAK,WAEvJ,sBAAKrC,UAAU,cAAf,UACC,uBAAO8B,QAAQ,MAAf,wBACA,uBAAOC,KAAK,SAASC,MAAOjB,EAAYH,IAAKqB,SAAU,SAACf,GAAD,OAAkBF,EAAe,2BAAID,GAAL,IAAkBH,IAAKsB,OAAOhB,EAAEiB,OAAOH,WAAUI,UAAQ,EAACC,KAAK,WAEvJ,sBAAKrC,UAAU,gBAAgBC,QAAS,kBAAMe,EAAe,2BAAID,GAAL,IAAkBF,QAASE,EAAYF,WAAnG,UACC,wCACA,qBAAKb,UAAU,yBAAf,SACC,qBAAKA,UAAY,kBAAoBe,EAAYF,OAAS,0BAA4B,WAGxF,sBAAKb,UAAU,gBAAgBC,QAAS,kBAAMe,EAAe,2BAAID,GAAL,IAAkBD,YAAaC,EAAYD,eAAvG,UACC,4CACA,qBAAKd,UAAU,yBAAf,SACC,qBAAKA,UAAY,kBAAoBe,EAAYD,WAAa,0BAA4B,WAG5F,uBAAOiB,KAAK,SAASC,MAAM,WAAWhC,UAAU,uBAGlD,qBAAKA,UAAU,wBAAf,SACC,sBAAKA,UAAU,eAAf,UACC,qBAAKA,UAAU,qBAAf,SACC,oBAAIA,UAAU,cAAd,0BAED,qBAAKA,UAAU,aAAaC,QAjDT,WACvB,GAAIO,EAAcE,QAAU,EAAG,OAAOf,EAAa,0BACnD,IAAM2C,EAAYC,SAASC,cAAc,SACzCF,EAAUN,MAAQ,KAAOS,OAAOjC,EAAcN,KAAK,OAAS,KAC5DqC,SAASG,KAAKC,YAAYL,GAC1BA,EAAUM,SACVL,SAASM,YAAY,QACrBN,SAASG,KAAKI,YAAYR,GAC1B3C,EAAa,iBAyCT,SACC,cAAC,IAAD,MAED,qBAAKK,UAAU,sBAAf,SACIQ,EAAcE,OAAS,EAAK,cAAC,EAAD,CAAab,KAAOW,IAAqB,mBAAGR,UAAU,mBAAb,wDAK5E,cAAC,EAAD,CAAUX,SAAWA,EAAWE,QAAUA,IAC1C,eAAC,IAAD,CAAMwD,GAAG,OAAO/C,UAAU,aAA1B,UACC,qBAAMgD,IAAKC,EAAcC,IAAI,yBAC7B,4CE9CWC,G,MAzCF,WACZ,OACC,qBAAKnD,UAAU,OAAf,SACC,sBAAKA,UAAU,kBAAf,UACC,sBAAKA,UAAU,eAAf,UACC,0CACA,2DAED,qBAAKA,UAAU,kBAAf,SACC,qOAED,sBAAKA,UAAU,yBAAf,UACC,oBAAIA,UAAU,qBAAd,2BACA,sBAAKA,UAAU,gBAAf,UACC,sBAAKA,UAAU,eAAf,UACC,wCACA,mKAED,sBAAKA,UAAU,eAAf,UACC,2CACA,mRAED,sBAAKA,UAAU,eAAf,UACC,wCACA,0IAED,sBAAKA,UAAU,eAAf,UACC,4CACA,yOAIH,eAAC,IAAD,CAAM+C,GAAG,IAAI/C,UAAU,aAAvB,UACC,qBAAMgD,IAAKC,EAAcC,IAAI,yBAC7B,mDCdUE,MAjBf,WACC,OACC,cAAC,IAAD,UACC,qBAAKpD,UAAU,MAAf,SACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOqD,KAAK,IAAIC,OAAK,EAArB,SACC,cAAC,EAAD,MAED,cAAC,IAAD,CAAOD,KAAK,QAAQC,OAAK,EAAzB,SACC,cAAC,EAAD,cCHSC,EAZS,SAACC,GACpBA,GAAeA,aAAuBC,UACzC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHXO,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAED1B,SAAS2B,eAAe,SAMzBX,M","file":"static/js/main.44f86294.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\n\nconst useSnackBar = () => {\n\tconst [ isActive, setIsActive ] = useState<boolean>(false)\n\tconst [ message, setMessage] = useState<string>(\"\")\n    \n\tconst openSnackBar = (message: string): void => {\n\t\tsetMessage(message)\n\t\tsetIsActive(true)\n\t}\n    \n\tuseEffect(() => {\n\t\tif (isActive){\n\t\t\tsetTimeout(() => setIsActive(false), 2000)\n\t\t}\n\t}, [isActive])\n    \n\treturn { isActive, message, openSnackBar}\n}\n\nexport default useSnackBar\n","export default __webpack_public_path__ + \"static/media/corchetes.2b52abe0.png\";","import React, { useState } from \"react\"\nimport { Switch } from \"@material-ui/core\"\nimport \"./ArrayOutput.css\"\n\ninterface ArrayOutputProps {\n    data: number[]\n}\n\nconst ArrayOutput = ({ data }: ArrayOutputProps) => {\n\tconst [isParse, setIsParse] = useState(true)\n\treturn (\n\t\t<div className=\"output\">\n\t\t\t<div className=\"output__switchContainer\">\n\t\t\t\t<div className=\"output__switch\" onClick={() => setIsParse(!isParse)}>\n\t\t\t\t\t<p>{isParse ? \"Raw\" : \"Parse\"}</p>\n\t\t\t\t\t<div className={ \"output__checkbox\" + (isParse ? \" output__checkboxSelected\" : \"\") }></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<p className=\"output__content\">{isParse ? \"[ \" + data.join(\", \") + \" ]\" : data.map((element, index) => <span className=\"output__parseElement\" key={index}>{element}</span>)}</p>\n\t\t</div>\n\t)\n}\n\nexport default ArrayOutput\n","import React, { useState, useEffect } from \"react\"\nimport \"./SnackBar.css\"\n\ninterface SnackBarProps {\n    isActive: boolean,\n    message: string\n}\n\nconst SnackBar = ({isActive, message}: SnackBarProps) => {\n\treturn (\n\t\t<div className={isActive ? [\"snackbar\", \"fadeIn\"].join(\" \") : [\"snackbar\", \"fadeOut\"].join(\" \")}>\n\t\t\t{message}\n\t\t</div>\n\t)\n}\n\nexport default SnackBar\n","import React, { useState } from \"react\"\nimport \"./Home.css\"\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\"\nimport ArrayInstructions from \"../../types/ArrayInstructions\"\nimport * as api from \"../../api\"\nimport useSnackBar from \"../SnackBar/useSnackBar\"\nimport ArrayGenLogo from \"../../images/corchetes.png\"\nimport { Link } from \"react-router-dom\"\n\nimport ArrayOutput from \"./ArrayOutput/ArrayOutput\"\nimport SnackBar from \"../SnackBar/SnackBar\"\n\nconst Home = () => {\n\tconst { message, isActive, openSnackBar } = useSnackBar()\n\tconst [ arrayResponse, setArrayResponse ] = useState<number[]>([])\n\tconst [ formContent , setFormContent ] =  useState<ArrayInstructions>({\n\t\tlength: 10,\n\t\tmin: 0,\n\t\tmax: 1000,\n\t\tsorted: true,\n\t\tduplicates: true\n\t})\n\n\tconst handleSubmit = (e: React.SyntheticEvent): void => {\n\t\te.preventDefault()\n\t\tif ( !((0 < formContent.length) && (formContent.length <= 10000))) return openSnackBar(\"the length of the array must be between 0 and 10000\")\n\t\tapi.getArray(formContent)\n\t\t\t.then(data => !data.data.error ? setArrayResponse(data.data.array) : openSnackBar(\"Invalid array options\"))\n\t\t\t.catch(err => openSnackBar(\"Invalid array options\"))\n\t}\n\n\tconst CopyToClipboard = () => {\n\t\tif (arrayResponse.length <= 0) return openSnackBar(\"No array generated yet\")\n\t\tconst tempInput = document.createElement(\"input\")\n\t\ttempInput.value = \"[ \" + String(arrayResponse.join(\", \")) + \" ]\"\n\t\tdocument.body.appendChild(tempInput)\n\t\ttempInput.select()\n\t\tdocument.execCommand(\"copy\")\n\t\tdocument.body.removeChild(tempInput)\n\t\topenSnackBar(\"Array copied\")\n\t}\n\n\treturn (\n\t\t<div className=\"home\">\n\t\t\t<div className=\"home__container\">\n\t\t\t\t<div className=\"home__instructions\">\n\t\t\t\t\t<h2>Array Options</h2>\n\t\t\t\t\t<form onSubmit={e => handleSubmit(e)} className=\"home__form\">\n\t\t\t\t\t\t<div className=\"home__input\">\n\t\t\t\t\t\t\t<label htmlFor=\"length\">Array length </label>\n\t\t\t\t\t\t\t<input type=\"number\" value={formContent.length} onChange={(e: any): void => setFormContent({...formContent, length: Number(e.target.value)})} required name=\"length\"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"home__input\">\n\t\t\t\t\t\t\t<label htmlFor=\"min\">Min Value </label>\n\t\t\t\t\t\t\t<input type=\"number\" value={formContent.min} onChange={(e: any): void => setFormContent({...formContent, min: Number(e.target.value)})} required name=\"min\"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"home__input\">\n\t\t\t\t\t\t\t<label htmlFor=\"max\">Max Value </label>\n\t\t\t\t\t\t\t<input type=\"number\" value={formContent.max} onChange={(e: any): void => setFormContent({...formContent, max: Number(e.target.value)})} required name=\"max\"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"home__boolean\" onClick={() => setFormContent({...formContent, sorted: !formContent.sorted})}>\n\t\t\t\t\t\t\t<p>Sorted </p>\n\t\t\t\t\t\t\t<div className=\"home__booleanContainer\">\n\t\t\t\t\t\t\t\t<div className={ \"home__checkbox\" + (formContent.sorted ? \" home__checkboxSelected\" : \"\") }></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"home__boolean\" onClick={() => setFormContent({...formContent, duplicates: !formContent.duplicates})}>\n\t\t\t\t\t\t\t<p>Duplicates </p>\n\t\t\t\t\t\t\t<div className=\"home__booleanContainer\">\n\t\t\t\t\t\t\t\t<div className={ \"home__checkbox\" + (formContent.duplicates ? \" home__checkboxSelected\" : \"\") }></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input type=\"submit\" value=\"GENERATE\" className=\"home__submit\"/>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\t\n\t\t\t\t<div className=\"home__outputContainer\">\n\t\t\t\t\t<div className=\"home__output\">\n\t\t\t\t\t\t<div className=\"home__outputHeader\">\n\t\t\t\t\t\t\t<h2 className=\"home__title\">Your Array</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"home__icon\" onClick={CopyToClipboard}>\n\t\t\t\t\t\t\t<FileCopyIcon />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"home__outputContent\">\n\t\t\t\t\t\t\t{  arrayResponse.length > 0  ? <ArrayOutput data={ arrayResponse } /> : <p className=\"home__noneOutput\">Has not generated any matrix yet</p>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<SnackBar isActive={ isActive } message={ message } />\n\t\t\t<Link to=\"info\" className=\"home__logo\">\n\t\t\t\t<img  src={ArrayGenLogo} alt=\"Array generator logo\"/>\n\t\t\t\t<p>Info</p>\n\t\t\t</Link>\n\t\t</div>\n\t)\n\n}\n\nexport default Home\n","import axios from \"axios\"\nimport ArrayInstructions from \"./types/ArrayInstructions\"\n\nconst url = process.env.REACT_APP_API_DIRECTION\n\nexport const getArray = (obj: ArrayInstructions) => axios.post(`${url}/gen`, obj)","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport \"./Info.css\"\nimport ArrayGenLogo from \"../../images/corchetes.png\"\n\nconst Info = () => {\n\treturn (\n\t\t<div className=\"info\">\n\t\t\t<div className=\"info__container\">\n\t\t\t\t<div className=\"info__header\">\n\t\t\t\t\t<h1>ArrayGen</h1>\n\t\t\t\t\t<h2>- An array generator -</h2>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"info__paragraph\">\n\t\t\t\t\t<p>ArrayGen is a tool designed to generate an array of numbers according to the options you choose, ArrayGen is useful for generating arrays that serve to test algorithms or as input for your code.</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"info__optionsContainer\">\n\t\t\t\t\t<h2 className=\"info__titleOptions\">Array options</h2>\n\t\t\t\t\t<div className=\"info__options\">\n\t\t\t\t\t\t<div className=\"info__option\">\n\t\t\t\t\t\t\t<h3>Length</h3>\n\t\t\t\t\t\t\t<p>The length of the array establishes the number of elements that the array will have, it must be in a range between 0 and 10000.</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"info__option\">\n\t\t\t\t\t\t\t<h3>Min & Max</h3>\n\t\t\t\t\t\t\t<p>el valor mínimo establece el valor más bajo de un elemento posible en la matriz, y el valor máximo establece el valor más alto de un elemento posible en la matriz. el valor mínimo debe ser más bajo que el valor máximo.</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"info__option\">\n\t\t\t\t\t\t\t<h3>Sorted</h3>\n\t\t\t\t\t\t\t<p>the sorted field sets whether the elements in the array should be sorted from lowest to highest value.</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"info__option\">\n\t\t\t\t\t\t\t<h3>Duplicates</h3>\n\t\t\t\t\t\t\t<p>the duplicates field sets whether the elements of the array should be unique or not, if this is true, the range between the minimum and the maximum should be equal to the length of the array.</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Link to=\"/\" className=\"home__logo\">\n\t\t\t\t\t<img  src={ArrayGenLogo} alt=\"Array generator logo\"/>\n\t\t\t\t\t<p>Generate</p>\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Info\n","import React from \"react\"\nimport logo from \"./logo.svg\"\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\"\nimport \"./App.css\"\n\nimport Home from \"./components/Home/Home\"\nimport Info from \"./components/Info/Info\"\n\nfunction App() {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/\" exact>\n\t\t\t\t\t\t<Home />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/info\" exact>\n\t\t\t\t\t\t<Info />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</BrowserRouter>\n\t)\n}\n\nexport default App\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry)\n\t\t\tgetFID(onPerfEntry)\n\t\t\tgetFCP(onPerfEntry)\n\t\t\tgetLCP(onPerfEntry)\n\t\t\tgetTTFB(onPerfEntry)\n\t\t})\n\t}\n}\n\nexport default reportWebVitals\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}